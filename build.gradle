group 'com.taxprinter'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://www.license4j.com/maven/"
        }
        flatDir dirs: '/usr/share/java' // Proguard path
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.2"
        classpath ':proguard:'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'distribution'

mainClassName = 'com.taxprinter.boot.MainKt'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

compileKotlin.onlyIf { !project.hasProperty('skipKCompile') }

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:1.0.2"
    compile 'io.dropwizard:dropwizard-core:0.9.3'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.8.1'
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.hubspot.dropwizard:dropwizard-guice:0.8.4.0'
    compile 'com.fazecast:jSerialComm:1.3.11'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile 'org.apache.logging.log4j:log4j:2.6.1'
    //compile 'com.license4j:license4j-runtime-library:RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}


task proguard(type: proguard.gradle.ProGuardTask) {
    configuration 'proguard.txt'
    libraryjars files(configurations.compile.collect())
    injars "${buildDir}/classes/main/"
    outjars "${buildDir}/classes/main2/"

}
proguard.dependsOn(compileKotlin)

task cpMain(type: Copy) {
    from "${buildDir}/classes/main2"
    into "${buildDir}/classes/main"
}

task removeMainFolder(type: Delete) {
    delete "${buildDir}/classes/main"
}

cpMain.dependsOn(proguard)

cpMain.dependsOn(removeMainFolder)


task removeMain2Folder(type: Delete) {
    delete "${buildDir}/classes/main2"
}

removeMain2Folder.dependsOn(cpMain)

task uberjar(type: Jar) {
    /**
     * To use Proguard, first compile your classes and then obfuscate your
     * compiled classes using proguard (with the dependencies included as jars)
     * using proguard, then run this task with -PskipKCompile to avoid
     * recompiling the already obfuscated compiled classes.
     */
    manifest {
        attributes 'Main-Class': 'com.taxprinter.boot.MainKt'
    }
    classifier = 'all'
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}
uberjar.dependsOn(removeMain2Folder)


artifacts {
    archives uberjar
}